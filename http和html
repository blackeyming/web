1. http 是一种通信标准，负责管理客户端浏览器在和网络服务器交互是产生的请求和响应。在客户端和服务器端还可以有其他几种设备，如
路由器，代理服务器，网关等，都是通过Internet链接。
2. request和response包括web浏览器请求web服务器向他发送一张网页和web服务器发送这张网页给web浏览器两个动作。
怎个过程如下：
(1) 在浏览器的地址栏输入http://server.com
(2) 浏览器会查询server.com对应的ip地址。
(3) 浏览器向server.com的主页发送一个请求。
(4) 这个请求通过Internet传输到server.com的web服务器端。
(5) 接收到这个请求的Web服务器会在他的硬盘上寻找这个网页。
(6) web服务器检索到这个网页并把它返回到浏览器。
(7) 浏览器将这个网页显示出来。
note: 对于网页上的每一个对象，例如一张图片，一段内嵌的视频或flash文件甚至一个css模板，上面的流程都要执行一次。
3. 第二步中浏览器会查询server.com对应的IP地址，每个连接到Internet上的机器都会有一个IP地址，但是我们一般通过域名来访问
web服务器。浏览器借助一个称为域名服务器（DNS）的辅助英特网服务找到与服务器对应的IP地址，然后利用这个IP地址和计算机通信。
4. 动态网页的过程比较复杂
（1） 浏览器同样查询server.com对应的IP地址
（2） 浏览器向server.com主页发送一个请求。
（3） 这个请求通过Internet传输到server.com的web服务器端
（4） 服务器在他硬盘上寻找这个网页。
（5） web服务器注意到现在在内存中的主页面是一个包含PHP脚本的文件，即将这个页面传送给PHP解释器
（6） php解释器运行这些PHP代码
（7） 某些PHP包含MySQL语句，PHP解释器将这些语句传送给MySQL数据库引擎
（8） MySQL数据引擎将MySQL语句的执行结果返回给PHP解释器
（9） PHP解释器将结果返回给web服务器
（10） web服务器将页面返回给客户端由客户端显示页面。
5. 在上面例子中，返回给客户端的html页面可能包含javascript，这些javascript会有本地客户端来解释。
6. php例子
<?php>
echo "hello world ,today is " .date("1").".";
?>
how are you?
开头的<?php 告诉服务器允许php程序来解释其后面代码直到？>为止，在这个结构之外任何元素都会被当做纯HTML直接发送给客户端。所以
“how are you?" 会直接输出到浏览器。php提供开发者与html代码无缝结合且迅捷的脚本语言。
7. MySQL结构的最高层是数据库，在数据库中可以创建一个或多个存储数据的表。
8. 创建javascript是为了实现以脚本的方式来访问html文档中的所有元素，换句话说javascript提供了一种和用户动态交互的途径。比如、
在输入表单中检验Email地址的有效性。结合CSS，javascript能够改变眼前动态网页的样式吗，而不是让服务器返回一个新的页面。
9. 使用好javascript需要一定的技巧，因为不同的浏览器设计者选择了不同的实现方式，主要是一些浏览器厂商为了竞争而增添了额外
功能，致使各浏览器之间并不能很好的兼容。 写一段能让所有浏览器接受的简单的javascript代码：
<script type="javascript">
  document.wirte("Hello world, today is "+Date());
</script>
10. CSS现在提供先前只有javascript才支持的动态交互，例如，不但可以为html设置样式来改变他的尺寸，颜色，边界，间隔等，
而且可以为页面添加生动的变化和变换。例如
<style>
  p
  {
    text-align:justify;
    font-family:Helvetica;
  }
</stype>
11. Apache web服务器不仅仅提供html文件的服务，还能处理其他很多类型的文件，包括图像文件，Flash文件，MP3音频文件，RSS供给等
12. php可以创造图像和其他文件，不管是在服务提供的过程中还是提供之前，通常需要将模块预先编译成Apache或php.也可以在运行时调用
GD(graphic draw)库就是这样一个模块，php用它来创建和出来图像
13. 服务器代理模块（proxy），能够实现将经常被请求的页面存储在缓存中从而减轻服务器的负载。
14. 重写（rewrite）模块，实现web服务器将不同的url类型按照自己内部的要求重写。
15. php负责处理服务器端的所有的主要工作，MySQL负责管理所有的数据，CSS和javascript一起负责网页的显示，在站点想要更新
内容时（网页和服务器上都可以），javascript还能通过和服务器端的php代码的交互来实现更新。
16. Gmail例子中Ajax执行的大致流程是：
（1） 服务器端输出html代码来生产web表单，web表单中包含username，firstname，，，这些注册账户必要的详细信息
（2） 同时，服务器会在描述页面的html代码中附加一些javascript代码来监听username的输入框中是否已经输入了文本内容以及
由于用户单击其他输入框导致该输入框失去焦点。
（3） 一旦文本失去了焦点，后台的javascript代码会将输入框中的username传送到服务器端的php脚本并且等待回应
（4） web服务器端收索到这个username并根据这个是否存在回应javascript
（5） javascript会在username的输入框附近显示提示文本信息，提示所提交的username是否可用。
（6） 如果不可用，但是用户仍然提交了这个表单，javascript会阻止表单的提交并重新强调。
所有这些都是在后台运行的，所以如果不用Ajax，整个表单会被提交的到服务器端，然后服务器会返回标明错误的html页面



