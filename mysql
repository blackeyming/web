1. 数据库是存储在计算机系统中以一种能够被快速发现的方式组织起来的记录或数据的一个结构化集合，其信息可以被迅速检索；
2. 一个MySQL数据库包含多个表，表又有多行，每一行是一个记录，包含数据本身的列或字段。
3. database（数据库）MySQL数据集的总容器；table（表）在数据库中存储实际数据的子容器；row（行）表中的一条记录，可以包含几个字段；column（列）行中的字段名
4. 通过三种方式来访问数据库： 命令行； phpMyAdmin之类的网络接口及其运用php之类的编程语言；
5. 启动MySQL（CMD）: "C:\Program Files(x86)\Zend\MySQL51\bin" -u root;以管理员的身份运行MySQL；
6. "SHOW database"; 可以检查MySQL是否正常；
7. MySQL的六种命令提示：
   Mysql> MySQL准备好指令输入；
   -> 等待下一行命令； 
   '> 等待下一行以单引号开始的字符串； 
   "> 等待下一行以双引号开始的字符串；
   `>等待下一行以反记号开始的字符串； 
   /*> 等待下一行以/*开始的字符串。
8. 命令输入期间要终止它的运行，不要用ctrl+c，因为这会终止整个MySQL的运行，输入\c 按enter键； 如果是输入不封闭的字符串或是注释
要先将其封闭，在输入\c，才能生效；
9. SQL中的命令和关键词是不区分大小写的； 命令格式为了清晰采用大写； 表名在windows中是不区分大小写的，但在Linux中区分；
10. 常见MySQL命令：
    ALER（数据库/表）修改数据库或表
    BACKUP(表)备份表
    CREATE(数据库/表)创建数据库或表
    DELETE（表和行的表达式）从表中删除行
    DESCRIBE（表）说明表的列
    DROP(数据库/表) 输出数据库或表
    EXIT退出
    GRANT(用户信息)修改用户权限
    HELP(项目) 显示有关于项目的帮助
    INSERT(数据表达式)插入数据
    LOCK（表） 锁住表
    QUIT()与exit()类似
    RENAME(表)重命名表
    SHOW(太多不能列出的项目)列出项目说明
    SOURCE(文件名) 从文件名执行命令
    STATUS()显示当前状态
    TRUNCATE(表)清空表
    UNLOCK（表）解锁表
    UPDATE(数据表达式)更新现有的数据
    USE(数据库) 打开数据库
11. 创建数据库：
    CREATE DATABASE publications创建名字为publications的数据库
    USE publications 使用数据库
    授权命令格式：GRANT PRIVILEGES ON database.object TO 'username'@'hostname' IDENTIFIED BY 'password'；创建用户，通过密码账号访问
    例子： GRANT ALL ON publications.* TO 'jim'@'localhost' IDENTIFIED BY 'mypasswd';
    允许用户jim@localhost 用密码mypasswd直接访问publications数据库；
    GRANT命令的参数： 
    （1）*.* 所有的数据库及其对象； 
    （2）database.*仅为了调用database的数据库及其所有对象
    （3）database.object仅为调用database的数据库及其调用了object对象的对象
12. 创建和检查新表
    CREATE TABLE classics(
    ->author VARCHAR(128),
    ->title VARCHAR(128),
    ->type VARCHAR(16),
    ->year CHAR(4) ENGINE MyISAM;
    then it will show Query OK, 0 rows affected(0.03 sec)
    mysql-> DESCRIBE classics;
13. 6 title in the table: field;type;null;key;default;extra 
14. 数据类型： 
    CHAR (n) n<256; 字符
    VARCHAR(n) n<65536;
    TEXT(n) n<65536; 文本
    TINYTEXT(N) n<256;
    MEDIUMTEXT(n) n<1677216
    LOONGTEXT(n) n<4294967296;
    BINARY(n)/BYTE(n) n<256;二进制
    VARBINARY(n) n<65536;
    BLOB(n) n<65535; 二进制大对象
    TINBLOB(n) n<256;
    MEDIUMBLOB(n)
    LONGBLOB(n)
    数值类型：(signed and unsigned)
    TINYINT  1 Byte  
    SMALLINT 2 Byte
    MEDIUMINT 3 Byte
    INT OR INTEGER 4 Byte
    BIGINT 8Byte
    FLOAT 4Byte (no unsigned)
    DOUBLE OR REAL 8 Byte (no unsigned)
15. DATETIME '0000-00-00-00 00:00:00'
    DATE '0000-00-00'
    TIMESTAMP '0000-00-00 00:00:00'
    TIME '00:00:00'
    YEAR 0000(only year 0000 and 1901-2155)
16. 添加列例子：
    ALTER TABLE classics ADD id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY; 
17.     
    

13. women is a kind of changable animal.
14. in this word with high speed information road and high tecnology, all peple concern about theirselves' hornor, 
everything is decend into smaller and smaller, no one's honor is last forever, so does the bad insance. so why we still
be foolish about purchasing the most virtual thing in this world, it is noncence at all. remember that the deepest stream lies smoothly
with silence and peace;(da yin xi sheng ,da xiang wu xing)
15.向表中增添数据：
    INSERT INTO classics(author,title, type, year) // 告诉将数据插入到哪里
    VALUE("chuming",'what','people','1992');
16. SELECT *FROM classics;
17. 重命名表classics: ALTER TABLE classics RENAME pre1900
18. 改变列中的数据类型：ALTER TABLE classics MODIFY year SMALLINT;
19. 添加新列：ALTER TABLE classics ADDP pages SMALLINT UNSIGNED;
20. 显示更新的表： DESCIRBE classics;
21. 重命名列：ALTER TABLE classics CHANGE type category VARCHAR(16); //将type该名为category； 必须指明数据类型
22. 删除列： ALTER TABLE classics DROP pages; // DROP 是不可逆的，一不小心就可能删除整张表或是数据库
23. 删除表： DROP TABLE classics;
24. 显示所有的表：SHOW table
25. 卡片索引：使得MySQL得以构建并能快速查询；
26. 创建索引：在表中添加一个索引。可以在创建表时，也可以在创建表之后的任何时刻。
27. 为classics表添加索引： ALTER TABLE classics ADD INDEX(author(20)); 在author列中创建索引，限制每个索引只能为前20个字符
28. 每列的关键词为MUL时意味着该列中的的某个值可能会出现多次，这也是正常的，比如书的作者可能出现多次。
29. 另一种方法： CREATE INDEX author ON classics(author(20)); 
30. 创建表时添加索引： 为了节省当表很大时的时间。
    CREATE TABLE classics(
    author VARCHAR(128),
    title VARCHAR(128),
    category VARCHAR(16),
    year SMALLIN,
    INDEX(author(20)),
    INDEX(title(20)),
    INDEX(category(4)),
    INDEX(year)   ) ENGINE MyISAM;
31. 主键：唯一的键可以立即检索到唯一的结果
32. ALTER TABLE classics ADD isbn CHAR(13) PRIMARY KEY;
33. 创建带索引的classics表
    CREATE TABLE classics(
    author VARCHAR(128),
    title VARCHAR(128),
    year SMALLINT,
    category VARCHAR(16),
    isbn CHAR(13),
    INDEX(author (20)),
    INDEX(title(20)),
    INDEX(categoy(4)),
    INDEX(year),
    PRIMARY KEY(isbn)  ) ENGINE MyISAM;
34. 创建FULLTEXT索引，只能用于MyISAM表，是MySQL默认的存储引擎使用的类型。需要转换的语句为：ALTER TABEL tablename ENGINE=MyISAM;
35. FULLTEXT只适用于CHAR ,VARCHAR ,TEXT 列
36. 对于大型数据集，将数据加到一个没有FULLTEXT 索引的表后在创建索引比较快。
    ALTER TABLE classics ADD FULLTEXT(author,title);
37. SELECT: 从表中提取数据，基本语法是： SELECT something FROM tablename;
    something 可以为'*' 表示所有， 可以为COUNT ，表示计算行数； 也为DISTINCT(DISTINTROW) 能够清除相同的数据的多重输入。
38. DELETE ：从表中删除一行： DELETE FROM classics WHERE title='mmm';
39. WHERE 关键词是SQL的核心
40. LIMIT: 限定一次查询返回的结果
    只有一参数表示返回的总行数，有两个参数，第一个表示起始行数，第二个还是返回的行数。
41. MATCH..AGAINST
    SELECT author, title FROM classics WHERE MATCH(author,title) AGAINST ('keywd');
    查找带有这个keywd的行。 可以用关键标记“%“ 来代表省略的字符串。
42. MATCH...AGAINST..IN BOOLEAN MODE
    SELECT author,title FROM classics WHERE MATCH(author,title) AGAINST('+charles -speci' IN BOOLEAN MODE);
    包含charles,所有有speci的都被排除。
43. UPDATE..SET: UPDATE classics SET author='chuming' WHERE author ='what';
44. ORDER BY: SELECT author,title FROM classics ORDER BY author ASC; // 按升序或降序来排序
              SELECT author,title, year FROM classics ORDER BY author, year DESC; //  先按照author,再按照year来排序
45. GROUP BY: SELECT category, COUNT(author) FROM classics GROUP BY category;// 可以知道在classics表的每个类别中有多少出版物
46. 连接表：考虑一个能与classics表中购入的图书进行交叉引用的customers表
    CREATE TABLE customers(
    name VARCHAR(128),
    isbn VARCHAR(128),
    PRIMARY KEY(isbn)) ENGINE MyISAM;
    INSERT INTO customers(name, isbn);
    VALUES('joe','78987589');
    INSERT INTO customers(name, isbn);
    VALUES('chuming','7966395');
    INSERT INTO customers(name, isbn) VALUES
    ('JOE','3435'),('HI','3435');
47. 使用连接表：SELECT name, author, title FROM customers,classics WHERE customers.isbn='classics.isbn';
48. NATURAL JOIN (自然连接)： SELECT name, author, titel FROM customers NATURAL JOIN classics; //节省输入
49. JOIN..ON : 指定一个列将两个表连接在一起：SELECT name, author,title FORM customers JOIN classics ON customers.isbn=classics.isbn;
50. AS: 创建别名，节省输入和提高查询的可读性： SELECT name, author, title FORM customers AS cust, classics AS class WHERE cust.isbn=class.isbn;
51. 使用逻辑运算符：   AND ,OR, NOT进一 步缩小选择。
52. MySQL函数
53. 用phpMyAdmin这样的管理程序来管理数据库和数据表。先安装并运行 Zend Sever CE 软件  打开浏览器输入http://localhost/phpMyAdmin;
54. how to build a template which can bring people honer and interest when show concerns about others. in the future, 
people never hide their purpose when communicate with others, we can know that it is not so kind in this world, man's 
value is to create more value to others, which is not narrowly concern about money, but in essence and mind. people know
what they truely want is great honor and high praises. that purpose will be more and more directly in the future world.



    
    



